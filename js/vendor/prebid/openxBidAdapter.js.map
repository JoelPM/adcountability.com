{"version":3,"file":"openxBidAdapter.js","mappings":"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","sources":["webpack://prebid.js/./modules/openxBidAdapter.js"],"sourcesContent":["import {\n  _each,\n  _map,\n  convertTypes,\n  deepAccess,\n  deepSetValue,\n  inIframe,\n  isArray,\n  parseSizesInput,\n  parseUrl\n} from '../src/utils.js';\nimport {config} from '../src/config.js';\nimport {registerBidder} from '../src/adapters/bidderFactory.js';\nimport {BANNER, VIDEO} from '../src/mediaTypes.js';\nimport {includes} from '../src/polyfill.js';\n\nconst SUPPORTED_AD_TYPES = [BANNER, VIDEO];\nconst VIDEO_TARGETING = ['startdelay', 'mimes', 'minduration', 'maxduration',\n  'startdelay', 'skippable', 'playbackmethod', 'api', 'protocols', 'boxingallowed',\n  'linearity', 'delivery', 'protocol', 'placement', 'minbitrate', 'maxbitrate'];\nconst BIDDER_CODE = 'openx';\nconst BIDDER_CONFIG = 'hb_pb';\nconst BIDDER_VERSION = '3.0.3';\n\nconst DEFAULT_CURRENCY = 'USD';\n\nexport const USER_ID_CODE_TO_QUERY_ARG = {\n  britepoolid: 'britepoolid', // BritePool ID\n  criteoId: 'criteoid', // CriteoID\n  fabrickId: 'nuestarid', // Fabrick ID by Nuestar\n  haloId: 'audigentid', // Halo ID from Audigent\n  id5id: 'id5id', // ID5 ID\n  idl_env: 'lre', // LiveRamp IdentityLink\n  IDP: 'zeotapid', // zeotapIdPlus ID+\n  idxId: 'idxid', // idIDx,\n  intentIqId: 'intentiqid', // IntentIQ ID\n  lipb: 'lipbid', // LiveIntent ID\n  lotamePanoramaId: 'lotameid', // Lotame Panorama ID\n  merkleId: 'merkleid', // Merkle ID\n  netId: 'netid', // netID\n  parrableId: 'parrableid', // Parrable ID\n  pubcid: 'pubcid', // PubCommon ID\n  quantcastId: 'quantcastid', // Quantcast ID\n  tapadId: 'tapadid', // Tapad Id\n  tdid: 'ttduuid', // The Trade Desk Unified ID\n  uid2: 'uid2', // Unified ID 2.0\n  flocId: 'floc', // Chrome FLoC,\n  admixerId: 'admixerid', // AdMixer ID\n  deepintentId: 'deepintentid', // DeepIntent ID\n  dmdId: 'dmdid', // DMD Marketing Corp ID\n  nextrollId: 'nextrollid', // NextRoll ID\n  novatiq: 'novatiqid', // Novatiq ID\n  mwOpenLinkId: 'mwopenlinkid', // MediaWallah OpenLink ID\n  dapId: 'dapid', // Akamai DAP ID\n  amxId: 'amxid', // AMX RTB ID\n  kpuid: 'kpuid', // Kinesso ID\n  publinkId: 'publinkid', // Publisher Link\n  naveggId: 'naveggid', // Navegg ID\n  imuid: 'imuid', // IM-UID by Intimate Merger\n  adtelligentId: 'adtelligentid' // Adtelligent ID\n};\n\nexport const spec = {\n  code: BIDDER_CODE,\n  gvlid: 69,\n  supportedMediaTypes: SUPPORTED_AD_TYPES,\n  isBidRequestValid: function (bidRequest) {\n    const hasDelDomainOrPlatform = bidRequest.params.delDomain || bidRequest.params.platform;\n    if (deepAccess(bidRequest, 'mediaTypes.banner') && hasDelDomainOrPlatform) {\n      return !!bidRequest.params.unit || deepAccess(bidRequest, 'mediaTypes.banner.sizes.length') > 0;\n    }\n\n    return !!(bidRequest.params.unit && hasDelDomainOrPlatform);\n  },\n  buildRequests: function (bidRequests, bidderRequest) {\n    if (bidRequests.length === 0) {\n      return [];\n    }\n\n    let requests = [];\n    let [videoBids, bannerBids] = partitionByVideoBids(bidRequests);\n\n    // build banner requests\n    if (bannerBids.length > 0) {\n      requests.push(buildOXBannerRequest(bannerBids, bidderRequest));\n    }\n    // build video requests\n    if (videoBids.length > 0) {\n      videoBids.forEach(videoBid => {\n        requests.push(buildOXVideoRequest(videoBid, bidderRequest))\n      });\n    }\n\n    return requests;\n  },\n  interpretResponse: function ({body: oxResponseObj}, serverRequest) {\n    let mediaType = getMediaTypeFromRequest(serverRequest);\n\n    return mediaType === VIDEO ? createVideoBidResponses(oxResponseObj, serverRequest.payload)\n      : createBannerBidResponses(oxResponseObj, serverRequest.payload);\n  },\n  getUserSyncs: function (syncOptions, responses, gdprConsent, uspConsent) {\n    if (syncOptions.iframeEnabled || syncOptions.pixelEnabled) {\n      let pixelType = syncOptions.iframeEnabled ? 'iframe' : 'image';\n      let url = deepAccess(responses, '0.body.ads.pixels') ||\n        deepAccess(responses, '0.body.pixels') ||\n        generateDefaultSyncUrl(gdprConsent, uspConsent);\n\n      return [{\n        type: pixelType,\n        url: url\n      }];\n    }\n  },\n  transformBidParams: function(params, isOpenRtb) {\n    return convertTypes({\n      'unit': 'string',\n      'customFloor': 'number'\n    }, params);\n  }\n};\n\nfunction generateDefaultSyncUrl(gdprConsent, uspConsent) {\n  let url = 'https://u.openx.net/w/1.0/pd';\n  let queryParamStrings = [];\n\n  if (gdprConsent) {\n    queryParamStrings.push('gdpr=' + (gdprConsent.gdprApplies ? 1 : 0));\n    queryParamStrings.push('gdpr_consent=' + encodeURIComponent(gdprConsent.consentString || ''));\n  }\n\n  // CCPA\n  if (uspConsent) {\n    queryParamStrings.push('us_privacy=' + encodeURIComponent(uspConsent));\n  }\n\n  return `${url}${queryParamStrings.length > 0 ? '?' + queryParamStrings.join('&') : ''}`;\n}\n\nfunction isVideoRequest(bidRequest) {\n  return (deepAccess(bidRequest, 'mediaTypes.video') && !deepAccess(bidRequest, 'mediaTypes.banner')) || bidRequest.mediaType === VIDEO;\n}\n\nfunction createBannerBidResponses(oxResponseObj, {bids, startTime}) {\n  let adUnits = oxResponseObj.ads.ad;\n  let bidResponses = [];\n  for (let i = 0; i < adUnits.length; i++) {\n    let adUnit = adUnits[i];\n    let adUnitIdx = parseInt(adUnit.idx, 10);\n    let bidResponse = {};\n\n    bidResponse.requestId = bids[adUnitIdx].bidId;\n\n    if (adUnit.pub_rev) {\n      bidResponse.cpm = Number(adUnit.pub_rev) / 1000;\n    } else {\n      // No fill, do not add the bidresponse\n      continue;\n    }\n    let creative = adUnit.creative[0];\n    if (creative) {\n      bidResponse.width = creative.width;\n      bidResponse.height = creative.height;\n    }\n    bidResponse.creativeId = creative.id;\n    bidResponse.ad = adUnit.html;\n    if (adUnit.deal_id) {\n      bidResponse.dealId = adUnit.deal_id;\n    }\n    // default 5 mins\n    bidResponse.ttl = 300;\n    // true is net, false is gross\n    bidResponse.netRevenue = true;\n    bidResponse.currency = adUnit.currency;\n\n    // additional fields to add\n    if (adUnit.tbd) {\n      bidResponse.tbd = adUnit.tbd;\n    }\n    bidResponse.ts = adUnit.ts;\n\n    bidResponse.meta = {};\n    if (adUnit.brand_id) {\n      bidResponse.meta.brandId = adUnit.brand_id;\n    }\n\n    if (adUnit.adomain && length(adUnit.adomain) > 0) {\n      bidResponse.meta.advertiserDomains = adUnit.adomain;\n    } else {\n      bidResponse.meta.advertiserDomains = [];\n    }\n\n    if (adUnit.adv_id) {\n      bidResponse.meta.dspid = adUnit.adv_id;\n    }\n\n    bidResponses.push(bidResponse);\n  }\n  return bidResponses;\n}\n\nfunction getViewportDimensions(isIfr) {\n  let width;\n  let height;\n  let tWin = window;\n  let tDoc = document;\n  let docEl = tDoc.documentElement;\n  let body;\n\n  if (isIfr) {\n    try {\n      tWin = window.top;\n      tDoc = window.top.document;\n    } catch (e) {\n      return;\n    }\n    docEl = tDoc.documentElement;\n    body = tDoc.body;\n\n    width = tWin.innerWidth || docEl.clientWidth || body.clientWidth;\n    height = tWin.innerHeight || docEl.clientHeight || body.clientHeight;\n  } else {\n    docEl = tDoc.documentElement;\n    width = tWin.innerWidth || docEl.clientWidth;\n    height = tWin.innerHeight || docEl.clientHeight;\n  }\n\n  return `${width}x${height}`;\n}\n\nfunction formatCustomParms(customKey, customParams) {\n  let value = customParams[customKey];\n  if (isArray(value)) {\n    // if value is an array, join them with commas first\n    value = value.join(',');\n  }\n  // return customKey=customValue format, escaping + to . and / to _\n  return (customKey.toLowerCase() + '=' + value.toLowerCase()).replace('+', '.').replace('/', '_')\n}\n\nfunction partitionByVideoBids(bidRequests) {\n  return bidRequests.reduce(function (acc, bid) {\n    // Fallback to banner ads if nothing specified\n    if (isVideoRequest(bid)) {\n      acc[0].push(bid);\n    } else {\n      acc[1].push(bid);\n    }\n    return acc;\n  }, [[], []]);\n}\n\nfunction getMediaTypeFromRequest(serverRequest) {\n  return /avjp$/.test(serverRequest.url) ? VIDEO : BANNER;\n}\n\nfunction buildCommonQueryParamsFromBids(bids, bidderRequest) {\n  const isInIframe = inIframe();\n  let defaultParams;\n\n  defaultParams = {\n    ju: config.getConfig('pageUrl') || bidderRequest.refererInfo.referer,\n    ch: document.charSet || document.characterSet,\n    res: `${screen.width}x${screen.height}x${screen.colorDepth}`,\n    ifr: isInIframe,\n    tz: new Date().getTimezoneOffset(),\n    tws: getViewportDimensions(isInIframe),\n    be: 1,\n    bc: bids[0].params.bc || `${BIDDER_CONFIG}_${BIDDER_VERSION}`,\n    dddid: _map(bids, bid => bid.transactionId).join(','),\n    nocache: new Date().getTime()\n  };\n\n  const userDataSegments = buildFpdQueryParams('ortb2.user.data');\n  if (userDataSegments.length > 0) {\n    defaultParams.sm = userDataSegments;\n  }\n\n  const siteContentDataSegments = buildFpdQueryParams('ortb2.site.content.data');\n  if (siteContentDataSegments.length > 0) {\n    defaultParams.scsm = siteContentDataSegments;\n  }\n\n  if (bids[0].params.platform) {\n    defaultParams.ph = bids[0].params.platform;\n  }\n\n  if (bidderRequest.gdprConsent) {\n    let gdprConsentConfig = bidderRequest.gdprConsent;\n\n    if (gdprConsentConfig.consentString !== undefined) {\n      defaultParams.gdpr_consent = gdprConsentConfig.consentString;\n    }\n\n    if (gdprConsentConfig.gdprApplies !== undefined) {\n      defaultParams.gdpr = gdprConsentConfig.gdprApplies ? 1 : 0;\n    }\n\n    if (config.getConfig('consentManagement.cmpApi') === 'iab') {\n      defaultParams.x_gdpr_f = 1;\n    }\n  }\n\n  if (bidderRequest && bidderRequest.uspConsent) {\n    defaultParams.us_privacy = bidderRequest.uspConsent;\n  }\n\n  // normalize publisher common id\n  if (deepAccess(bids[0], 'crumbs.pubcid')) {\n    deepSetValue(bids[0], 'userId.pubcid', deepAccess(bids[0], 'crumbs.pubcid'));\n  }\n  defaultParams = appendUserIdsToQueryParams(defaultParams, bids[0].userId);\n\n  // supply chain support\n  if (bids[0].schain) {\n    defaultParams.schain = serializeSupplyChain(bids[0].schain);\n  }\n\n  return defaultParams;\n}\n\nfunction buildFpdQueryParams(fpdPath) {\n  const firstPartyData = config.getConfig(fpdPath);\n  if (!Array.isArray(firstPartyData) || !firstPartyData.length) {\n    return '';\n  }\n  const fpd = firstPartyData\n    .filter(\n      data => (Array.isArray(data.segment) &&\n            data.segment.length > 0 &&\n            data.name !== undefined &&\n            data.name.length > 0)\n    )\n    .reduce((acc, data) => {\n      const name = typeof data.ext === 'object' && data.ext.segtax ? `${data.name}/${data.ext.segtax}` : data.name;\n      acc[name] = (acc[name] || []).concat(data.segment.map(seg => seg.id));\n      return acc;\n    }, {})\n  return Object.keys(fpd)\n    .map((name, _) => name + ':' + fpd[name].join('|'))\n    .join(',')\n}\n\nfunction appendUserIdsToQueryParams(queryParams, userIds) {\n  _each(userIds, (userIdObjectOrValue, userIdProviderKey) => {\n    const key = USER_ID_CODE_TO_QUERY_ARG[userIdProviderKey];\n\n    if (USER_ID_CODE_TO_QUERY_ARG.hasOwnProperty(userIdProviderKey)) {\n      switch (userIdProviderKey) {\n        case 'merkleId':\n          queryParams[key] = userIdObjectOrValue.id;\n          break;\n        case 'flocId':\n          queryParams[key] = userIdObjectOrValue.id;\n          break;\n        case 'uid2':\n          queryParams[key] = userIdObjectOrValue.id;\n          break;\n        case 'lipb':\n          queryParams[key] = userIdObjectOrValue.lipbid;\n          if (Array.isArray(userIdObjectOrValue.segments) && userIdObjectOrValue.segments.length > 0) {\n            const liveIntentSegments = 'liveintent:' + userIdObjectOrValue.segments.join('|')\n            queryParams.sm = `${queryParams.sm ? queryParams.sm + ',' : ''}${liveIntentSegments}`;\n          }\n          break;\n        case 'parrableId':\n          queryParams[key] = userIdObjectOrValue.eid;\n          break;\n        case 'id5id':\n          queryParams[key] = userIdObjectOrValue.uid;\n          break;\n        case 'novatiq':\n          queryParams[key] = userIdObjectOrValue.snowflake;\n          break;\n        default:\n          queryParams[key] = userIdObjectOrValue;\n      }\n    }\n  });\n\n  return queryParams;\n}\n\nfunction serializeSupplyChain(supplyChain) {\n  return `${supplyChain.ver},${supplyChain.complete}!${serializeSupplyChainNodes(supplyChain.nodes)}`;\n}\n\nfunction serializeSupplyChainNodes(supplyChainNodes) {\n  const supplyChainNodePropertyOrder = ['asi', 'sid', 'hp', 'rid', 'name', 'domain'];\n\n  return supplyChainNodes.map(supplyChainNode => {\n    return supplyChainNodePropertyOrder.map(property => supplyChainNode[property] || '')\n      .join(',');\n  }).join('!');\n}\n\nfunction buildOXBannerRequest(bids, bidderRequest) {\n  let customParamsForAllBids = [];\n  let hasCustomParam = false;\n  let queryParams = buildCommonQueryParamsFromBids(bids, bidderRequest);\n  let auids = _map(bids, bid => bid.params.unit);\n\n  queryParams.aus = _map(bids, bid => parseSizesInput(bid.mediaTypes.banner.sizes).join(',')).join('|');\n  queryParams.divids = _map(bids, bid => encodeURIComponent(bid.adUnitCode)).join(',');\n  // gpid\n  queryParams.aucs = _map(bids, function (bid) {\n    let gpid = deepAccess(bid, 'ortb2Imp.ext.data.pbadslot');\n    return encodeURIComponent(gpid || '')\n  }).join(',');\n\n  if (auids.some(auid => auid)) {\n    queryParams.auid = auids.join(',');\n  }\n\n  if (bids.some(bid => bid.params.doNotTrack)) {\n    queryParams.ns = 1;\n  }\n\n  if (config.getConfig('coppa') === true || bids.some(bid => bid.params.coppa)) {\n    queryParams.tfcd = 1;\n  }\n\n  bids.forEach(function (bid) {\n    if (bid.params.customParams) {\n      let customParamsForBid = _map(Object.keys(bid.params.customParams), customKey => formatCustomParms(customKey, bid.params.customParams));\n      let formattedCustomParams = window.btoa(customParamsForBid.join('&'));\n      hasCustomParam = true;\n      customParamsForAllBids.push(formattedCustomParams);\n    } else {\n      customParamsForAllBids.push('');\n    }\n  });\n  if (hasCustomParam) {\n    queryParams.tps = customParamsForAllBids.join(',');\n  }\n\n  enrichQueryWithFloors(queryParams, BANNER, bids);\n\n  let url = queryParams.ph\n    ? `https://u.openx.net/w/1.0/arj`\n    : `https://${bids[0].params.delDomain}/w/1.0/arj`;\n\n  return {\n    method: 'GET',\n    url: url,\n    data: queryParams,\n    payload: {'bids': bids, 'startTime': new Date()}\n  };\n}\n\nfunction buildOXVideoRequest(bid, bidderRequest) {\n  let oxVideoParams = generateVideoParameters(bid, bidderRequest);\n  let url = oxVideoParams.ph\n    ? `https://u.openx.net/v/1.0/avjp`\n    : `https://${bid.params.delDomain}/v/1.0/avjp`;\n  return {\n    method: 'GET',\n    url: url,\n    data: oxVideoParams,\n    payload: {'bid': bid, 'startTime': new Date()}\n  };\n}\n\nfunction generateVideoParameters(bid, bidderRequest) {\n  const videoMediaType = deepAccess(bid, `mediaTypes.video`);\n  let queryParams = buildCommonQueryParamsFromBids([bid], bidderRequest);\n  let oxVideoConfig = deepAccess(bid, 'params.video') || {};\n  let context = deepAccess(bid, 'mediaTypes.video.context');\n  let playerSize = deepAccess(bid, 'mediaTypes.video.playerSize');\n  let width;\n  let height;\n\n  // normalize config for video size\n  if (isArray(bid.sizes) && bid.sizes.length === 2 && !isArray(bid.sizes[0])) {\n    width = parseInt(bid.sizes[0], 10);\n    height = parseInt(bid.sizes[1], 10);\n  } else if (isArray(bid.sizes) && isArray(bid.sizes[0]) && bid.sizes[0].length === 2) {\n    width = parseInt(bid.sizes[0][0], 10);\n    height = parseInt(bid.sizes[0][1], 10);\n  } else if (isArray(playerSize) && playerSize.length === 2) {\n    width = parseInt(playerSize[0], 10);\n    height = parseInt(playerSize[1], 10);\n  }\n\n  let openRtbParams = {w: width, h: height};\n\n  // legacy openrtb params could be in video, openrtb, or video.openrtb\n  let legacyParams = bid.params.video || bid.params.openrtb || {};\n  if (legacyParams.openrtb) {\n    legacyParams = legacyParams.openrtb;\n  }\n  // support for video object or full openrtb object\n  if (isArray(legacyParams.imp)) {\n    legacyParams = legacyParams.imp[0].video;\n  }\n  Object.keys(legacyParams)\n    .filter(param => includes(VIDEO_TARGETING, param))\n    .forEach(param => openRtbParams[param] = legacyParams[param]);\n\n  // 5.0 openrtb video params\n  Object.keys(videoMediaType)\n    .filter(param => includes(VIDEO_TARGETING, param))\n    .forEach(param => openRtbParams[param] = videoMediaType[param]);\n\n  let openRtbReq = {\n    imp: [\n      {\n        video: openRtbParams\n      }\n    ]\n  }\n\n  queryParams['openrtb'] = JSON.stringify(openRtbReq);\n\n  queryParams.auid = bid.params.unit;\n  // override prebid config with openx config if available\n  queryParams.vwd = width || oxVideoConfig.vwd;\n  queryParams.vht = height || oxVideoConfig.vht;\n\n  if (context === 'outstream') {\n    queryParams.vos = '101';\n  }\n\n  if (oxVideoConfig.mimes) {\n    queryParams.vmimes = oxVideoConfig.mimes;\n  }\n\n  if (bid.params.test) {\n    queryParams.vtest = 1;\n  }\n\n  let gpid = deepAccess(bid, 'ortb2Imp.ext.data.pbadslot');\n  if (gpid) {\n    queryParams.aucs = encodeURIComponent(gpid)\n  }\n\n  // each video bid makes a separate request\n  enrichQueryWithFloors(queryParams, VIDEO, [bid]);\n\n  return queryParams;\n}\n\nfunction createVideoBidResponses(response, {bid, startTime}) {\n  let bidResponses = [];\n\n  if (response !== undefined && response.vastUrl !== '' && response.pub_rev > 0) {\n    let vastQueryParams = parseUrl(response.vastUrl).search || {};\n    let bidResponse = {};\n    bidResponse.requestId = bid.bidId;\n    if (response.deal_id) {\n      bidResponse.dealId = response.deal_id;\n    }\n    // default 5 mins\n    bidResponse.ttl = 300;\n    // true is net, false is gross\n    bidResponse.netRevenue = true;\n    bidResponse.currency = response.currency;\n    bidResponse.cpm = parseInt(response.pub_rev, 10) / 1000;\n    bidResponse.width = parseInt(response.width, 10);\n    bidResponse.height = parseInt(response.height, 10);\n    bidResponse.creativeId = response.adid;\n    bidResponse.vastUrl = response.vastUrl;\n    bidResponse.mediaType = VIDEO;\n\n    // enrich adunit with vast parameters\n    response.ph = vastQueryParams.ph;\n    response.colo = vastQueryParams.colo;\n    response.ts = vastQueryParams.ts;\n\n    bidResponses.push(bidResponse);\n  }\n\n  return bidResponses;\n}\n\nfunction enrichQueryWithFloors(queryParams, mediaType, bids) {\n  let customFloorsForAllBids = [];\n  let hasCustomFloor = false;\n  bids.forEach(function (bid) {\n    let floor = getBidFloor(bid, mediaType);\n\n    if (floor) {\n      customFloorsForAllBids.push(floor);\n      hasCustomFloor = true;\n    } else {\n      customFloorsForAllBids.push(0);\n    }\n  });\n  if (hasCustomFloor) {\n    queryParams.aumfs = customFloorsForAllBids.join(',');\n  }\n}\n\nfunction getBidFloor(bidRequest, mediaType) {\n  let floorInfo = {};\n  const currency = config.getConfig('currency.adServerCurrency') || DEFAULT_CURRENCY;\n\n  if (typeof bidRequest.getFloor === 'function') {\n    floorInfo = bidRequest.getFloor({\n      currency: currency,\n      mediaType: mediaType,\n      size: '*'\n    });\n  }\n  let floor = floorInfo.floor || bidRequest.params.customFloor || 0;\n\n  return Math.round(floor * 1000); // normalize to micro currency\n}\n\nregisterBidder(spec);\n"],"names":["SUPPORTED_AD_TYPES","BANNER","VIDEO","VIDEO_TARGETING","USER_ID_CODE_TO_QUERY_ARG","britepoolid","criteoId","fabrickId","haloId","id5id","idl_env","IDP","idxId","intentIqId","lipb","lotamePanoramaId","merkleId","netId","parrableId","pubcid","quantcastId","tapadId","tdid","uid2","flocId","admixerId","deepintentId","dmdId","nextrollId","novatiq","mwOpenLinkId","dapId","amxId","kpuid","publinkId","naveggId","imuid","adtelligentId","spec","code","gvlid","supportedMediaTypes","isBidRequestValid","bidRequest","hasDelDomainOrPlatform","params","delDomain","platform","deepAccess","unit","buildRequests","bidRequests","bidderRequest","length","requests","reduce","acc","bid","mediaType","push","partitionByVideoBids","videoBids","bannerBids","bids","customParamsForAllBids","hasCustomParam","queryParams","buildCommonQueryParamsFromBids","auids","_map","aus","parseSizesInput","mediaTypes","banner","sizes","join","divids","encodeURIComponent","adUnitCode","aucs","gpid","some","auid","doNotTrack","ns","config","coppa","tfcd","forEach","customParams","customParamsForBid","Object","keys","customKey","value","isArray","toLowerCase","replace","formatCustomParms","formattedCustomParams","window","btoa","tps","enrichQueryWithFloors","method","url","ph","data","payload","Date","buildOXBannerRequest","videoBid","oxVideoParams","width","height","videoMediaType","oxVideoConfig","context","playerSize","parseInt","openRtbParams","w","h","legacyParams","video","openrtb","imp","filter","param","includes","openRtbReq","JSON","stringify","vwd","vht","vos","mimes","vmimes","test","vtest","generateVideoParameters","buildOXVideoRequest","interpretResponse","serverRequest","oxResponseObj","body","getMediaTypeFromRequest","response","bidResponses","startTime","undefined","vastUrl","pub_rev","vastQueryParams","parseUrl","search","bidResponse","requestId","bidId","deal_id","dealId","ttl","netRevenue","currency","cpm","creativeId","adid","colo","ts","createVideoBidResponses","adUnits","ads","ad","i","adUnit","adUnitIdx","idx","Number","creative","id","html","tbd","meta","brand_id","brandId","adomain","advertiserDomains","adv_id","dspid","createBannerBidResponses","getUserSyncs","syncOptions","responses","gdprConsent","uspConsent","iframeEnabled","pixelEnabled","pixelType","queryParamStrings","gdprApplies","consentString","generateDefaultSyncUrl","type","transformBidParams","isOpenRtb","convertTypes","getViewportDimensions","isIfr","tWin","tDoc","document","docEl","documentElement","top","e","innerWidth","clientWidth","innerHeight","clientHeight","defaultParams","isInIframe","inIframe","ju","refererInfo","referer","ch","charSet","characterSet","res","screen","colorDepth","ifr","tz","getTimezoneOffset","tws","be","bc","dddid","transactionId","nocache","getTime","userDataSegments","buildFpdQueryParams","sm","userIds","supplyChain","supplyChainNodes","supplyChainNodePropertyOrder","siteContentDataSegments","scsm","gdprConsentConfig","gdpr_consent","gdpr","x_gdpr_f","us_privacy","deepSetValue","userId","_each","userIdObjectOrValue","userIdProviderKey","key","hasOwnProperty","lipbid","Array","segments","liveIntentSegments","eid","uid","snowflake","schain","ver","complete","nodes","map","supplyChainNode","property","fpdPath","firstPartyData","fpd","segment","name","ext","segtax","concat","seg","_","customFloorsForAllBids","hasCustomFloor","floor","floorInfo","getFloor","size","customFloor","Math","round","getBidFloor","aumfs","registerBidder","pbjs","installedModules"],"sourceRoot":""}